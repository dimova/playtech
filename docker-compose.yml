services:
  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: config_user
      POSTGRES_PASSWORD: config_pass
      POSTGRES_DB: config_db
    volumes:
      - pgdata:/var/lib/postgresql/data

  demo:
    build:
      context: .
      dockerfile: ./demo/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
      - redis
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/config_db
      SPRING_DATASOURCE_USERNAME: config_user
      SPRING_DATASOURCE_PASSWORD: config_pass
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  configclient:
    build:
      context: ./configclient
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

volumes:
  pgdata:
